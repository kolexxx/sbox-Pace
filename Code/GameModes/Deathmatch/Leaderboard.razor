@using Sandbox
@using Sandbox.UI
@using System.Collections.Generic
@using System.Linq

@namespace Pace.UI
@attribute [StyleSheet]
@inherits Panel

<root>
    <label></label>
    <label></label>
    <label></label>
    <label></label>
</root>

@code
{
    private RealTimeUntil _timeUntilUpdate = 0;

    public override void Tick()
    {
        if (!Player.Local.IsValid())
            return;

        if (_timeUntilUpdate)
            Update();
    }

    private void Update()
    {
        _timeUntilUpdate = 0.1f;
        var players = new List<Player>(GameMode.Current.Players.Where(x => x.IsValid()));

        players.Sort(delegate (Player x, Player y)
        {
            return y.Stats.Kills.CompareTo(x.Stats.Kills);
        });

        var j = 0;
        var place = 1;
        var localInTop3 = false;
        for (var i = 0; i < players.Count || j < 4; i++)
        {
            if (GetChild(j) is not Label label)
                break;

            if (j >= players.Count)
            {
                j++;
                label.Text = string.Empty;
                continue;
            }

            if (i > 0 && players[i - 1].Stats.Kills != players[i].Stats.Kills)
                place++;

            if (j == 3 && !localInTop3 && players[i] != Player.Local)
                continue;

            label.Text = GetFormatString(players[i], place);
            label.SetClass("local", players[i] == Player.Local);
            label.SetClass("first", place == 1);
            label.SetClass("second", place == 2);
            label.SetClass("third", place == 3);

            if (players[i] == Player.Local)
                localInTop3 = true;

            j++;
        }
    }

    private string GetFormatString(Player player, int place)
    {
        return $"{place}. {player.Network.Owner.DisplayName} - {player.Stats.Kills}";
    }
}