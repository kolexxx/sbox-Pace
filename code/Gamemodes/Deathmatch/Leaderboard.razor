@using Sandbox;
@using Sandbox.UI;
@using System.Collections.Generic;

@namespace Pace.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	<label></label>
	<label></label>
	<label></label>
	<label></label>
</root>

@code
{
	private RealTimeUntil _timeUntilUpdate = 0;

	public override void Tick()
	{
		if (_timeUntilUpdate)	
			Update();
	}

	private void Update()
	{
		_timeUntilUpdate = 0.1f;
		var clients = new List<IClient>(Game.Clients);

		clients.Sort(delegate (IClient x, IClient y)
		{
			return y.GetInt("kills").CompareTo(x.GetInt("kills"));
		});

		var j = 0;
		var place = 1;
		var localInTop3 = false;
		for (var i = 0; i < clients.Count && j < 4; i++)
		{
			if (GetChild(j) is not Label label)
				break;

			if (j >= clients.Count)
			{
				j++;
				label.Text = string.Empty;
				continue;
			}

			if (i > 0 && clients[i - 1].GetInt("kills") != clients[i].GetInt("kills"))
				place++;

			if (j == 3 && !localInTop3 && clients[i] != Game.LocalClient)
				continue;

			label.Text = GetFormatString(clients[i], place);
			label.SetClass("me", clients[i] == Game.LocalClient);
			label.SetClass("first", place == 1);
			label.SetClass("second", place == 2);
			label.SetClass("third", place == 3);

			if (clients[i] == Game.LocalClient)
				localInTop3 = true;

			j++;
		}
	}

	private string GetFormatString(IClient client, int place)
	{
		return $"{place}. {client.Name} - {client.GetInt("kills")}";
	}
}