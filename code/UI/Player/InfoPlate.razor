@using Sandbox;
@using Sandbox.UI;
@using System;

@namespace Pace.UI
@attribute [StyleSheet]
@inherits WorldPanel

<root>
	<label text=@Player.Client.Name></label>
	<div class="health">
		<div @ref=Health class="health-inner"></div>
	</div>
</root>

@code
{
	public Pawn Player { get; set; }
	public Panel Health { get; set; }

	public InfoPlate(Pawn player)
	{
		Player = player;
		PanelBounds = new Rect() { Width = 1000f, Height = 1000f };
	}

	protected override void OnAfterTreeRender(bool firstTime)
	{
		Health.Style.Width = Length.Fraction(Player.Health / 100f);

		if (Player.Health > 90)
			Health.Style.BackgroundColor = Color.FromBytes(44, 233, 44);
		else if (Player.Health > 70)
			Health.Style.BackgroundColor = Color.FromBytes(171, 231, 3);
		else if (Player.Health > 45)
			Health.Style.BackgroundColor = Color.FromBytes(213, 202, 4);
		else if (Player.Health > 20)
			Health.Style.BackgroundColor = Color.FromBytes(234, 129, 4);
		else
			Health.Style.BackgroundColor = Color.FromBytes(246, 6, 6);
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Player.Health);
	}

	[GameEvent.PreRender]
	private void Frame()
	{
		SceneObject.RenderingEnabled = Player.LifeState == LifeState.Alive;

		if (!SceneObject.RenderingEnabled)
			return;

		Transform = new Transform
		(
			Player.EyePosition + Vector3.Up * 25f + new Vector3(0, -25f, 25f),
			MyGame.Plane.Normal.EulerAngles.ToRotation()
		);
	}

	public class Component : EntityComponent<Pawn>
	{
		InfoPlate _plate;

		protected override void OnActivate()
		{
			_plate = new InfoPlate(Entity);
		}

		protected override void OnDeactivate()
		{
			_plate.Delete(true);
		}
	}
}
